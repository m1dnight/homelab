# tailscale proxmox https://tailscale.com/kb/1130/lxc-unprivileged
# echo 'net.ipv4.ip_forward = 1' | sudo tee -a /etc/sysctl.d/99-tailscale.conf
# echo 'net.ipv6.conf.all.forwarding = 1' | sudo tee -a /etc/sysctl.d/99-tailscale.conf
# sudo sysctl -p /etc/sysctl.d/99-tailscale.conf
- name: add tailscale key
  ansible.builtin.apt_key:
    url: https://pkgs.tailscale.com/stable/debian/bookworm.noarmor.gpg
    keyring: /usr/share/keyrings/tailscale-archive-keyring.gpg

- name: add tailscale repo
  ansible.builtin.apt_repository:
    repo: deb [signed-by=/usr/share/keyrings/tailscale-archive-keyring.gpg] https://pkgs.tailscale.com/stable/debian bookworm main
    state: present

- name: install basic system packages
  become: true
  apt:
    pkg: tailscale
    state: latest
    update_cache: true

- name: enable ip forwarding
  ansible.builtin.sysctl:
    name: net.ipv4.ip_forward
    value: 1
    state: present
    reload: yes

- name: enable ipv6 forwarding
  ansible.builtin.sysctl:
    name: net.ipv6.conf.all.forwarding
    value: 1
    state: present
    reload: yes

- name: reload systemctl daemon
  become: true
  ansible.builtin.systemd_service:
    name: tailscaled
    daemon_reload: true

# check https://tailscale.com/kb/1112/userspace-networking for lxc
- name: ensure tailscale is started
  become: true
  ansible.builtin.service:
    name: tailscaled
    state: started


- name: check authentication status
  become: true
  block:
    - ansible.builtin.set_fact:
        _auth_needed: false

    - register: _status
      changed_when: false
      ansible.builtin.command:
        argv:
          - "tailscale"
          - "status"
          - "--json"

    - when: _fields.BackendState == "NeedsLogin"
      ansible.builtin.set_fact:
        _auth_needed: true
      vars:
        _fields: "{{ _status.stdout | from_json }}"

- name: authenticate if needed
  when: _auth_needed or tailscale_reauth
  block:
    - name: authorize machine
      become: true
      ansible.builtin.command:
        argv:
          - "tailscale"
          - "up"
          - "--authkey"
          - "{{ tailscale_key }}"

- name: obtain local tailnet ip
  register: __tailnet_ip
  ansible.builtin.command:
    argv:
      - "tailscale"
      - "ip"
      - "--4"

- name: validate ip address format
  ansible.builtin.assert:
    that:
      - __tailnet_ip.stdout_lines[0] | regex_search('^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$')
    fail_msg: "Invalid IP address format: {{ __tailnet_ip.stdout_lines[0] }}"
    success_msg: "Valid IP address format: {{ __tailnet_ip.stdout_lines[0] }}"

- name: set tailnet ip variable
  ansible.builtin.set_fact:
    tailnet_ip: "{{ __tailnet_ip.stdout_lines[0] }}"

- name: debug
  debug:
    msg: "{{ tailnet_ip }}"


# tailscale up --advertise-connector --advertise-tags=tag:connector --advertise-routes=141.134.25.8/32  --advertise-exit-node
